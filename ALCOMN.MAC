	.SBTTL **************************************************
	.SBTTL *						*
	.SBTTL *MODULE:		ALCOMN				*
	.SBTTL *PROGRAMMER:	DAVE THEURER			*
	.SBTTL *FUNCTION:	ALIENS CONSTANTS AND VARIABLES	*
	.SBTTL *		TO BE .INCLUDED IN:		*
	.SBTTL *		    ALGAME,ALDISP,ALHARD	*
	.SBTTL *						*
	.SBTTL	Copyright 1980 Atari, Inc.  Unauthorized reproduction,
	.SBTTL	adaption, distribution, performance or display of this
	.SBTTL	computer program or the associated audiovisual work is
	.SBTTL	strictly prohibited.
	.SBTTL **************************************************
	.ENABL AMA
	.INCLUDE HLL65		;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
	.PAGE
	.RADIX 16

	.NLIST CND
	.SBTTL CONSTANTS-COUNTS
SPACG=0

;
;SCREEN OBJECT QUANTITIES
;
NHISCO	=8			;# OF HIGH SCORES KEPT
NRANKS	=99.
	.IF NE,SPACG
NEXPLO	=10
NENESH	=4
NDEFSH	=4
NSAUCE	=1
NFORTS	=4
NEROWS	=5
NECOLS	=8
NBALLS	=4
NSHRAP	=2
NASTER	=4
	.ENDC

	.SBTTL CONSTANTS-STATE CODES
;
;QSTATE CODES (ROUTAD INDICES)
;
CNEWGA	=0
CNEWLI	=2
CPLAY	=4
CENDLI	=6
CENDGA	=8
CPAUSE	=0A
CNEWAV	=0C
CENDWAV	=0E
CHISCHK	=10
CDLADR	=14
CGETINI	=12
CNOTFOU	=CDLADR
CREQRAT	=CDLADR+2
CNEWV2	=CREQRAT+2
CLOGO	=CNEWV2+2		;LOGO INIT
CINIRAT =CLOGO+2
CNWLF2	=CINIRAT+2
CDROP	=CNWLF2+2		;DROP MODE
CSYSTM	=CDROP+2
CBOOM	=CSYSTM+2		;BOOM STATE
;
;DISPLAY STATE CODES
CDPLAY	=0			;PLAY
CDSYST	=2			;SYSTEM CONFIGURATION
CDREQRA =8			;REQUEST RANK
CDPLPL  =0E			;PLAY PLAYER WARNING

CDGOVR  =0C			;GAME OVER PLAYER MSG
CDHITB	=0A			;HI SCORE TABLE
CDGETI	=6			;GET INITIALS
CDBOOM  =4			;BOOM DISPLAY
CDPRST	=CDPLPL+2		;"PRESS START"
CD2GAM	=CDLOGP+2	;"2 GAME MIN"
CDBOXP	=CDPRST+2		;LOGO BOX
CDLOGP	=CDBOXP+2		;LOGO ITSELF




;
;TIMING FOR PAUSE STATE
;
SECOND	=20.			;FRAMES/SECOND
QUASEC	=SECOND/4		;QUARTER SECOND FACTOR
	.PAGE
	.IF NE,SPACG

;OBJECT SIZES (FOR COLLISION DETECTION)
;
IRIE	=IRNGX/32.		;ENEMY RADIUS
IRIG	=IRIE			;GUN	"
IRIS	=IRIE			;SAUCER	"
IRIF	=10			;FORTRESS
IRISP	=IRIE/4			;SPEAR	"
	.PAGE
	.SBTTL CONSTANTS-PLAYFIELD PARAMETERS


					;ENEMY COLUMNS:
ICOLMAX	=IHIX-<2*IRIE>			;	MAX X (WC)
ICOLMIN	=ILOX+<2*IRIE>			;	MIN X (WC)

ILIVES	=4			;INITIAL # OF LIVES GIVEN TO PLAYER
IESZ	=80			;INITIAL ENEMY HEIGHT (WC)
IGXMIN	=ICOLMIN+<IRIE*2>	;MINIMUM X VALUE FOR GUN
IGXMAX	=ICOLMAX-<IRIE*2>	;MAXIMUM X VALUE FOR GUN

					;GUN:
IGXINC	=<<IGXMAX-IGXMIN>/<3*FPS>>	;	X INCREMENT/FRAME

IGX	=<IGXMAX+IGXMIN>/2	;INITIAL GUN COORDINATES (WC)
IGY	=ILOY+<IRIG*2>
IGZ	=IESZ

ISAUCY	=IHIY-<IRIS*2>		;INITIAL SAUCER COORDINATES (WC)
ISAUCZ	=IESZ

IFORTX	=IGXMAX-IRIG-IRIF	;INITIAL FORTRESS POSITION (RIGHTMOST)(WC)
IFORTY	=IGY+IRIG+IRIF+IRIE
IFORTZ	=IESZ
IFORTS	=7E			;INITIAL FORT STATUS
IXDFFCC	=<IRNGX-<2*<IHIX-IFORTX>>>/<NFORTS-1>	;FORT SEPARATION
IFORADI	=IRIF			;FORTRESS RADIUS

IROWL	=0FF			;INITIAL ENEMY ROW STATUS
IXCOLS	=IFORTX			;X COORDINATE (WC) OF UPPER RIGHT ENEMY IN
IZCOLS	=IESZ			;A NEWLY INITIALIZED ARRAY
IYROW1	=ISAUCY-IRIS-IRIE-IRIE	;Y COORDINATE (WC) OF UPPER RIGHT ENEMY IN
				;A NEWLY INITIALIZED 1ST WAVE
IXDEECC	=IRIE*5/2		;ENEMY ENEMY CENTER CENTER DELTA (X)
IYDEECC	=IRIE*3			;  "	"	"     "      "   (Y)
ICOLINC	=1			;ENEMY COLUMN & ROW INITIAL INCREMENTS
IROWINC	=IRIE
ITIMSAU	=0C0			;INITIAL VAUE FOR TIMSAU
ITIMEXP	=1			;INITIAL VALUE FOR TIMEXP
ITIMXP	=5			;# OF FRAME UPDATES FOR EACH BANG

ITIMGUP	=0			;INITIAL VALUE FOR TIMGUP
ITAUTOF	=1			;INITIAL VALUE FOR TAUTOF
ITIMESP	=4			;INITIAL VALUE FOR TIMESP
FPS	=30.			;FRAMES/SEC

					;SAUCER:
ISAXMAX	=IHIX-IRIS			;	MAXIMUM X (WC)
ISAXMIN	=ILOX+IRIS			;	MINIMUM X (WC)
ISAXINC	=<<ISAXMAX-ISAXMIN>/<5*FPS>> 	;	X INCREMENT/FRAME

					;SPEARS:
IDSXMIN	=ISAXMIN
IDSXMAX	=ISAXMAX
IDSXINC	=4
IESXRA	=2			;X,Y,Z RADU FOR EACH OBJECT TYPE
IESYRA	=7
IESZRA	=2
IDSXRA	=1
IDSYRA	=4
IDSZRA	=1
ISAXRA	=0C
ISAYRA	=8
ISAZRA	=08
IENXRA	=6
IENYRA	=8
IENZRA	=6
IASXRA	=5
IASYRA	=7
IASZRA	=5
IDSYMAX	=ISAUCY+IRIS			;	DEFENSIVE SPEAR MAX Y (WC)
IESYMIN	=IGY				;	ENEMY SPEAR MIN Y (WC)
IDSYINC	=<<IDSYMAX-IESYMIN>/<1*FPS>>	;	DEF SPEAR INCREMENT/FRAME
IESYINC	=IDSYINC/2			;	ENEMY SPEAR INCREMENT/FRAME


IASXMAX	=IHIX-IASXRA-2		;ASTEROIDS
IASXMIN	=IASXRA+3
IASZMAX	=IHIY-IASZRA-2
IASZMIN	=IASZRA+3
				;EYE:
IEYL	=20			;WORLD COORDINATE Y (NEGATIVE)
IEZL	=080			;WORLD COORDINATE Z
	
IEYEFAC	=2			;EYE FACTOR POWER OF 2 MULTIPLIER
IXDOTD	=8			;X,Y, & Z DELTA BETWEN DOTS IN CUBE
IYDOTD	=8
IZDOTD	=8
	.ENDC
	.PAGE
	.SBTTL CONSTANTS-PICTURES
	.IF NE,SPACG

				;DYNAMIC PICTURE CODES (INDEX ANITAB)
CGUPIC	=0
CSAUCPI	=1
CESPIC	=3
CDSPIC	=2
CEXPIC	=4
CBAPIC	=0
CSHPIC	=5
CASPIC	=6

	.SBTTL CONSTANTS-EXPLOSION CODES

				;EXPLOSION CODES:
CBNGSS	=0			;	SPEAR SPEAR
CBNGSC	=1			;	SPEAR SAUCER
CBNGEN	=2			;	SPEAR ENEMY
CBNGUN	=3			;	SPEAR GUN
	.ENDC
	.SBTTL	BOOM
NPARTI	=10			;# OF PARTICLES
				;PARTICLE DECELERATIONS
PARLXA	=20			;FRACTIONAL
PARLYA	=20
PARLZA	=20
PARTXA	=0			;INTEGER (POSITIVE)
PARTYA	=0
PARTZA	=0
	.PAGE
LEDOFF	=<MLED1!MLED2>
NROMS	=12.
	.MACRO LAH ...X
	LDA I,0
	.=.-1
	.ENABL M68
	.WORD ...X
	.DSABL M68
	.=.-1
	.ENDM
	.MACRO LXL ...X
	LDX I,0
	.=.-1
	.WORD ...X
	.=.-1
	.ENDM
	.PAGE
	.SBTTL	HARDWARE DEFINITIONS
				;
COLPORT	=800			;COLOR RAM
				;
IN1	=0C00			;INPUT BYTE 1
MCOINR	=01			;RIGHT COIN MECH
MCOINC	=02			;CENTER COIN MECH
MCOINL	=04			;LEFT COIN MECH
$LMBIT	=8			;SLAM
MTEST	=10			;SELF TEST
MDITES	=20			;DIAGNOSTIC TEST SWITCH
MHALT	=40			;VG HALT
M3KHTI	=80			;3 KHZ TIMER
				;
INOP0	=0D00			;OPTION SWITCH 0
INOP1	=0E00			;OPTION SWITCH 1
				;
VECRAM	=2000			;VECTOR RAM
ROMSTART=3000			;ROM START (VECTOR ROM)
				;
OUT0	=4000			;OUTPUT BYTE 0
MRCCNT	=01			;RIGHT COIN COUNTER
MMCCNT	=02			;CENTER
MLCCNT	=04			;LEFT
MVINVX	=08			;VIDEO INVERT X
MVINVY	=10			;VIDEO INVERT Y
				;
VGSTART	=4800			;VG START
WTCHDG	=5000			;WATCH DOG CLEAR
INTACK	=WTCHDG			;
VGSTOP	=5800			;VG RESET
HARDWA	=6000			;AUX BOARD IO BASE ADDRESS
PROG	=09000			;PROGRAM ROM
;
; AUX BOARD
;
EAIN	=HARDWA+50		;EAROM READ PORT
EADAL	=HARDWA			;EAROM WRITE BASE ADDRESS
EACTL	=HARDWA+40		;EAROM CONTROL
				;
POKEY	=HARDWA+0C0		;POKEY 1
POKEY2	=HARDWA+0D0		;POKEY 2
				;
OUTANK	=HARDWA+0E0		;OUTPUT BYTE 1
MLED1	=2			;LED 1
MLED2	=1			;LED 2
MFLIP	=4			;FLIP (=1 FOR PLAYER 2)
				;
				;MATH BOX
MYLOW	=HARDWA+60		;READ LOW
MYHIGH	=HARDWA+70		;READ HIGH
MSTAT	=HARDWA+40		;STATUS
MBSTAR	=HARDWA+80		;START (SIGNS ANALYSIS)
MAL	=MBSTAR
MAH	=MBSTAR+1
MBL	=MBSTAR+2
MBH	=MBSTAR+3
MEL	=MBSTAR+4
MEH	=MBSTAR+5
MFL	=MBSTAR+6
MFH	=MBSTAR+7
MXL	=MBSTAR+8
MXH	=MBSTAR+9
MNL	=MBSTAR+0C
MZLL	=MBSTAR+0D
MZLH	=MBSTAR+0E
MZHL	=MBSTAR+0F
MZHH	=MBSTAR+10
SYM	=MBSTAR+12
MSZXD	=MBSTAR+14
MXPL	=MBSTAR+15
MXPH	=MBSTAR+16
MDYPL	=MBSTAR+18
;
; POKEY DEFINITIONS
;
AUDF1	=POKEY
AUDC1	=POKEY+1
AUDCTL	=POKEY+8
ALLPOT	=POKEY+8
RANDOM	=POKEY+0A
POTGO	=POKEY+0B
SKCTL	=POKEY+0F
AUDF2	=POKEY2
AUDC2	=POKEY2+1
AUD2CTL	=POKEY2+8
ALLPO2	=POKEY2+8
RANDO2	=POKEY2+0A
POTGO2	=POKEY2+0B
SKCTL2	=POKEY2+0F
				;
				;INPUT BYTE 0 (POKEY2 FASTPOT)
				;(CONTROLLED BY FLIP)
MSTRT1	=20			;START 1
MSTRT2	=40			;START 2
MSUZA	=8			;SUPPERZAPPER
MFIRE	=10			;FIRE
MFAKE	=80			;FAKE INPUT
MOPT13	=07			;SPECIAL OPTIONS
				;
				;INPUT BYTE 2 (POKEY 1 FASTPOT)
				;(CONTROLLED BY FLIP)
COCKTA	=10			;=1 IF COCKTAIL
MOPTI4	=20			;SPECIAL OPTION
				;D0-D3 POT READ
;
; OPTIONS
;
OM2GAM	=1			;2 GAME MIN OPTION MASK
;
;COLORS
;
BLUE=6
BLULET	=7
GREEN=5
RED=3
YELLOW=1
WHITE=0
PURPLE=2
TURQOI=4
WELCOL=BLUE			;WELL
CURCOL=YELLOW			;CURSOR
ICHCOL=WHITE			;ENEMY SHOTS
PCHCOL=YELLOW			;PLAYER SHOTS
INVCOL=RED			;INVADERS
LETCOL=GREEN			;LETTERS
DEPCOL=WELCOL
EXPCOL=WHITE			;EXPLOSION
FLICOL=RED			;FLIPPERS
TANCOL=PURPLE			;TANKER
TRACOL=GREEN			;TRALERS
ZAPCOL=WHITE			;SUPER ZAP
FRED	=0C
FBLUE	=0B
FGREEN	=07
HRED	=0D
ZWHITE	=FRED&FBLUE&FGREEN
ZYELLO	=FRED&FGREEN
ZPURPL	=FRED&FBLUE
ZRED	=FRED
ZTURQOI	=FGREEN&FBLUE
ZGREEN	=FGREEN
ZBLUE	=FBLUE
ZBLACK	=0F
PSHCTR	=8		;PLAYER SOT CENTER
PDIWHI	=9			;PLAYER DEATH EXPLOSION COLORS
PDIYEL	=10.
PDIRED	=11.
NYMCOL	=12.			;NYMPHE
FLASH	=15.			;CHANGES EVERY 4 MO.
	.PAGE
	.SBTTL VARIABLES-CONTROL
	.ASECT
	.=0
;
;CONTROL & TIMING VARIABLES
;
QSTATE:	.BLKB 1			;CONTAINS CODE FOR STATE ROUTINE (INDEX INTO ROUTAD)
QDSTATE:	.BLKB 1		;DISPLAY STATE
QNXTSTA:.BLKB 1			;NEXT STATE CODE TO EXECUTE AFTER PAUSE
QFRAME:	.BLKB 1			;FRAME COUNTER (WRAPS AT FF)
QTMPAUS:.BLKB 1			;PAUSE TIMER (IN SECOND UNITS)
QSTATUS:.BLKB 1			;STATUS FLAGS
MATRACT	=80			;	D7: 0=ATTRACT  1=GAME
MGTMOD	=40		;D6:0=NO TIME;START ALLOWED
				;  :1GAME TIMER RUNNING
				;  :PRESS START NOT ALLOWED
;
;OTHER OVERHEAD
;
$$CRDT:	.BLKB 1			;# OF CREDITS
$INTCT:	.BLKB 1			;INTERRUPT COUNT
$TEST:
$LAM:
$COINA:	.BLKB 1			;COIN MECHS
$CMODE:
OPTIN1:	.BLKB 1			;OPTIONS
OPTIN2:	.BLKB 1
TSLAMR:	.BLKB 1			;SLAM SOUND TIMER
$LMTIM:	.BLKB 1			;SLAM INDICATION
MECHS	=3
EMCTRS	=3
$CNSTT:	.BLKB MECHS
$PSTSL:	.BLKB MECHS
$CCTIM:	.BLKB EMCTRS
$BCCNT:	.BLKB 1
$CNCT:	.BLKB 1
$BC:	.BLKB 1
COLRAM:	.BLKB 10		;COLOR RAM
	.PAGE
	.SBTTL VARIABLES-WORK

TEMP0:	.BLKB 1
TEMP1:
TEMPL:	.BLKB 1
TEMP2:	.BLKB 1
TEMP3:	.BLKB 1
TEMP4:	.BLKB 1
TEMPX: .BLKB 1
TEMPY:	.BLKB 1
TEMPZ:	.BLKB 1
MTEMP:	.BLKB 4			;MACRO USE ONLY
SAVEX:	.BLKB 1
SAVEY:	.BLKB 1
INDEX1:	.BLKB 1
INDEX2:	.BLKB 1
INDEX3:	.BLKB 1
INDEX4:	.BLKB 1
INDYLO:	.BLKB 1		;USE FOR INDIRECT Y
INDYHI:	.BLKB 1

	.SBTTL VARIABLES-PLAYERS
;
;PLAYER ARRAYS
;
PLAYUP:	.BLKB 1			;PLAYER UP (0=LEFT, 1=RIGHT)
NUMPLA:	.BLKB 1			;# OF PLAYERS (-1)
NEWPLA:	.BLKB 1			;# OF NEXT PLAYER (FROM END WAVE TO NEW WAVE)
LSCORL:	.BLKB 1			;SCORE ARRAY
LSCORM:	.BLKB 1			;(TRIPLE PRECISION BCD)
LSCORH:	.BLKB 1
RSCORL:	.BLKB 1
RSCORM:	.BLKB 1
RSCORH:	.BLKB 1

WAVEN1:	.BLKB 1			;# OF ENEMY WAVE WHICH PLAYER IS BATTLING -1
WAVEN2:	.BLKB 1
LIVES1:	.BLKB 1			;# OF BASES PLAYER HAS LEFT
LIVES2:	.BLKB 1

	.SBTTL VARIABLES-SWITCHES

				;SWITCHES
INPUT:	.BLKB 1			;ROUGH INPUT (0=ON)
	.BLKB 1			;UNUSED
DBSW:	.BLKB 1			;LAST ROUGH INPUT (0=ON)
SWSTRT:
SWSTAT:	.BLKB 1			;DEBOUNCED INPUT (0=ON)
SWFINA:	.BLKB 1			;LATCHED INPUT (1=ON)(CLEARED BY GAME)
SWRELE:	.BLKB 1			;OLD SWSTAT READING
TBHD:	.BLKB 1			;TRACK BALL VARIABLES
CURSPO:	.BLKB 1
OTB:	.BLKB 1
	.IF NE,SPACG

	.SBTTL VARIABLES-OBJECT TIMERS, INCREMENTS

ATGUND:	.BLKB 1			;AUTO GUN DIRECTION (-LEFT; +RIGHT)
TAUTOF:	.BLKB 1			;AUTO FIRE GUN TIMER
SAUCDR:	.BLKB 1			;SAUCER DIRECTION
TIMGUP:	.BLKB 1			;GUN UPDATE TIMER
TIMSAU:	.BLKB 1			;SAUCER TIMER
TIMEXP:	.BLKB 1			;EXPLOSION UPDATE TIMER
TIMEPO:	.BLKB 1			;ENEMY POSITION UPDATE TIMER
	.PAGE
	.SBTTL VARIABLES-ENEMY
				;
				;ENEMY STATUS BITS= 0=DEAD, 1=ALIVE
				;	2 BYTES/ROW
				;	D0 -> D7=LEFT TO RIGHT IN ROW
				;	ROWL -> ROWL+5=BOTTOM TO TOP ROW

TROWL:	.BLKB 1			;TEMP STORAGE FOR ROWL
FONSCR:	.BLKB 1			;FLAG FOR ENEMY ON SCREEN IN ROW
ANISEQ:	.BLKB 1			;ENEMY POSITION (0,1,2 OR 3)-USED TO DEDUCE
				;WHICH PICTURE TO DISPLAY

ROWLOR:	.BLKB 1			;OR'D ROWL ARRAYS

FORTST:	.BLKB NFORTS*4		;FORTRESS STATII



NUENSH:	.BLKB 1			;# ENEMY SHOTS IN AIR
NUMBNG:	.BLKB 1			;# EXPLOSIONS

	.ENDC

	.PAGE
	.SBTTL VARIABLES-DISPLAY

FRTIMR:	.BLKB 1			;VG FRAME DISPLAY TIMER
BUFRDY:	.BLKB 1			;BUFFER STATUS (0-DISPLAY IT, <>0:BUILD IT)
OBJIND:	.BLKB 1			;INDEX INTO OBJECT ARRAYS (OCNT....)
PXL:	.BLKB 1			;TEMP STORAGE FOR POINT'S COORDINATES
PYL:	.BLKB 1			;  (WORLD)
PZL:	.BLKB 1


LINSCA:	.BLKB 1			;LINEAR SCALE (W3DSUP)
BINSCA:	.BLKB 1			;BINARY SCALE (W3DSUP)
EYH:	.BLKB 1			;EYE POSITION (SIGNED) HI BYTE
EYLL:	.BLKB 1			;EYE POSITION (FRACTIONAL)
EYLDES:	.BLKB 1		;EYE DESTINATION Y
EXL:	.BLKB 1			;LOCATION OF EYE (WORLD COORD)
EYL:	.BLKB 1
EZL:	.BLKB 1

SXL:	.BLKB 1			;TEMP STORAGE FOR POINT'S COORD
SXH:	.BLKB 1			;(SCREEN)
SZL:	.BLKB 1
SZH:	.BLKB 1
EYEFAC:	.BLKB 1			;EYE SCREEN DISTANCE
XADJL:	.BLKB 2
ZADJL:	.BLKB 2			;SCREEN Z VANISH PT
				;DRAW SUBROUTINE VARIABLES:
CURNTX:	.BLKB 2			;CURRENT BEAM POSITION
CURNTY:	.BLKB 2
XCOMP:	.BLKB 4			;X COMPONENT FOR VECTOR DELTA
YCOMP	=XCOMP+2
VGSIZE:	.BLKB 1			;SCALING SIZE
VGBRIT:	.BLKB 1			;VECTOR BRIGHTNESS
VGLIST:	.BLKB 2			;VECTOR LIST POINTER
SVGLIST:	.BLKB 2
CBUF1	=.		;FOLLOWING BUFFER MAY BE USED FOR OTHER PURPOSES
X0L:	.BLKB 1			;USED WITHIN ONELIN IN ALDISP TO
X1L:	.BLKB 1			;STORE UNIT VECTORS X 0>7 (X AND Z)
X2L:	.BLKB 1
X3L:	.BLKB 1
X4L:	.BLKB 1
X5L:	.BLKB 1
X6L:	.BLKB 1
X7L:	.BLKB 1
X0H:	.BLKB 1
X1H:	.BLKB 1
X2H:	.BLKB 1
X3H:	.BLKB 1
X4H:	.BLKB 1
X5H:	.BLKB 1
X6H:	.BLKB 1
X7H:	.BLKB 1

Z0L:	.BLKB 1
Z1L:	.BLKB 1
Z2L:	.BLKB 1
Z3L:	.BLKB 1
Z4L:	.BLKB 1
Z5L:	.BLKB 1
Z6L:	.BLKB 1
Z7L:	.BLKB 1
Z0H:	.BLKB 1
Z1H:	.BLKB 1
Z2H:	.BLKB 1
Z3H:	.BLKB 1
Z4H:	.BLKB 1
Z5H:	.BLKB 1
Z6H:	.BLKB 1
Z7H:	.BLKB 1
	.IF NE,SPACG
THSZL:	.BLKB 1			;GRID DISPLAY:TEMP SZL & H FOR FAR ENDPT
THSZH:	.BLKB 1
CONTR1:	.BLKB 1			;COUNTERS
CONTR2:	.BLKB 1
RANGEX:	.BLKB 1			;RANGE FOR COLLISION
RANGEY:	.BLKB 1
RANGEZ:	.BLKB 1
ASTOLA:	.BLKB 1			;# OF ASTEROIDS TO BE LAUNCHED
SENEMR:	.BLKB 1			;ROW & CLUMN # OF ENEMY IN SMART TARGET WINDOW
SENEMC:	.BLKB 1			;(- IF NONE)
SENEMY:	.BLKB 1			;INDEX OF ENEMY OBJECT IN SMART TARGET WINDOW
DELTX:	.BLKB 1
DELTY:	.BLKB 1
DELTZ:	.BLKB 1
DELTXL:	.BLKB 1
DELTYL:	.BLKB 1
DELTZL:	.BLKB 1
ABSZDE:	.BLKB 1
ABSXDE:	.BLKB 1
	.PAGE
	.SBTTL VARIABLES-OBJECT WORLD COORDINATES, PICTURES

	.ASECT
	.=100
OCNTXL:
GX:	.BLKB 1
SAUCX:	.BLKB NSAUCE
ESX:	.BLKB NENESH
DSX:	.BLKB NDEFSH
EXPLX:	.BLKB NEXPLO
BALLX:	.BLKB NBALLS
SHX:	.BLKB NSHRAP
ASX:	.BLKB NASTER
FORTX:	.BLKB NFORTS
	
OCNTYL:
GY:	.BLKB 1
SAUCY:	.BLKB NSAUCE
ESY:	.BLKB NENESH
DSY:	.BLKB NDEFSH
EXPLY:	.BLKB NEXPLO
BALLY:	.BLKB NBALLS
SHY:	.BLKB NSHRAP
ASY:	.BLKB NASTER
FORTY:	.BLKB NFORTS
	
OCNTZL:
GZ:	.BLKB 1
SAUCZ:	.BLKB NSAUCE
ESZ:	.BLKB NENESH
DSZ:	.BLKB NDEFSH
EXPLZ:	.BLKB NEXPLO
BALLZ:	.BLKB NBALLS
SHZ:	.BLKB NSHRAP
ASZ:	.BLKB NASTER
FORTZ:	.BLKB NFORTS
	
OBJPIC:
GPIC:	.BLKB 1
SAUCPIC:.BLKB NSAUCE
ESPIC:	.BLKB NENESH
DSPIC:	.BLKB NDEFSH
EXPLPI:	.BLKB NEXPLO
BALLPI:	.BLKB NBALLS
SHPIC:	.BLKB NSHRAP
ASPIC:	.BLKB NASTER
	.ENDC
				;
				;
INTENS:	.BLKB 1			;OBJECT INTENSITY (D7-D5)
SUBCOU:	.BLKB 1			;POINT COUNTER
UNITXL:	.BLKB 1			;UNIT VECTORS
UNITXH:	.BLKB 1
UNITZL:	.BLKB 1	
UNITZH:	.BLKB 1
COLOR:	.BLKB 1			;
CURWAV:	.BLKB 1		;CURRENT WAVE
YDEUNI:	.BLKB 1			;Y DELTA FOR UNIT SCALE
TNKOUT:	.BLKB 1			;START LEDS, ETC. FOR DUTANK
TCMFLG:	.BLKB 1			;2 GAME MIN FLAG (80=NOT 2 YET)
NEWAIT:	.BLKB 1
OFRTIM:	.BLKB 1
OCURSL:	.BLKB 1		;OLD CURSOR POSITION (LINE #)
ESHCOU:	.BLKB 1		;ENEMY SOT COUNT
CHACHA:	.BLKB 1			;CHARGE CHARGE DELTA
CHAINV:	.BLKB 1			;CHARGE INVADER DELTA
VGY:	.BLKB 1			;INDEX INTO VGLIST
OLDLLO:	.BLKB 1		;OLD ENEMY LINE BUFFER START ADDRESS
OLDLHI:	.BLKB 1
LITRAL:	.BLKB 2			;LANGUAGE TABLE
ZPNLOC:	.BLKB 1		;USED BY DIGITS
ZPOFFS:	.BLKB 1			;USED BY DIGITS
RUNGVG:	.BLKB 2		;RUNG VG PTR.
PUCHDE:	.BLKB 1			;PULSAR CHASE DELAY (# FRAMES BEFORE FLIP)
WTTFRA:	.BLKB 1			;# OF FLIP SECTIONS TO TAKE/FRAME FOR TOP FLIPPERS
TOUT0:	.BLKB 1			;SCREEN FLIP STATUS FOR IO
QT1:	.BLKB 1			;SECURITY
SECUVG:	.BLKB 2			;SECURITY PTR.
;BD-BE	:EAROM
;BF-FF	:SOUNDS
;
;COMMON BUFFER REUSAGE
;

		.=CBUF1

;
BFACTR:	.BLKB 1		;USED IN SCAPIC - BINARY PART OF SCALE FACTOR
SCFL:	.BLKB 2		;USED IN SCAPIC - SCALE FACTOR 
LEFSID:	.BLKB 1		;REQUEST RATE DISPLAY LEFT SIDE
RITSID:	.BLKB 1			;RRD-RIGHT SIDE
	.PAGE
	.=100
NGAMES:	.BLKB 1			;# GAMES FOR RANKING
NPLAYR:	.BLKB 1			;# PLAYERS
BONUS:	.BLKB 2		;BONUS CODE FOR STARTING AT ADVANCED WAVE
CURSVL:	.BLKB 1		;CURSOR ACCELERATION DOWN WELL
CURSVH:	.BLKB 1
CURMOD:	.BLKB 1			;CURSOR MODE (-:DROPPING)
CURSYL:	.BLKB 1		;CURSOR POSITION (FRACTIONAL)
INMCOU:	.BLKB 1			;# OF INVADERS ON LINES
INCCOU:	.BLKB 1			;# OF INVADERS CHASING CURSOR
EXICAM:	.BLKB 1			;INVADER CAN EXIT FLAG
CAMPC:	.BLKB 1			;INVADER CAM PC
CAMSTA:	.BLKB 1		;CAM STATUS
BOOMFL:	.BLKB 1			;BOOM ACTIVE FLAG (0=NOT ACTIVE)
BOOMTI:	.BLKB 1			;BOOM TIMER (1/5 SECONDS)
LEVELY:	.BLKB 2
WELTYP:	.BLKB 1			;WELL TYPE (0=CLOSED,-1=OPEN)
WELLID:	.BLKB 1			;WELL CODE
ROTFLG:	.BLKB 1			;MSB OF BUILT SUBR BUFFER (IF 0 THEN NOT READY)
ROTDIS:	.BLKB 1			;BUILD WELL REQUEST (NOT 0)
PLAGRO:	.BLKB 1			;STAR FIELD STATUS
EXPCOU:	.BLKB 1		;# OF EXPLOSIONS
COCTAL:	.BLKB 1			;COCKTAIL FLAG

	.SBTTL	VARIABLES - PLAY
				;SKILL LEVEL CONTOURING VARIABLES
				;
WCHARIN:.BLKB 1			;INVADER CHARGE INC/FRAME
WCHARFR:.BLKB 1			;INVADER CHARGE FREQUENCY (FIRE
WCHAMX:	.BLKB 1			;MAX # OF INVADER CHARGES ON GIRD-1
QT6:	.BLKB 1
WINVMX:	.BLKB 1			;MAX # OF INVADERS-1
WINVJM:	.BLKB 1			;INVAER JUMP FREQ (JUMP IF
				;RANDOM AND WINVJM=0)
WNYMMX:	.BLKB 1			;# OF NYMPHS
QT5:	.BLKB 1
WCHARL:	.BLKB 1			;FRACTION CHARGE INC
ZADEST:	.BLKB 2		;ZADJL DEST.
ELICNT:	.BLKB 1		;ENEMY LINE COUNTER (D7=1:WARNING REQUEST)
BOFLASH:	.BLKB 1			;BONUS FLASH TIMER
SUZTIM:	.BLKB 1			;SUPERZAP TIMER
HIWAVE:	.BLKB 1		;HIGHEST WAVE REACHED IN LAST GAME
HIRATE:	.BLKB 1			;HIGHEST LEVEL-1/2 ALLOWED IN RATE TABLE
INTIME:	.BLKB 1			;TIME SNCE LAST GAME (13 SECOND UNITS)
WFLMIN:	.BLKB 1		;MINIMUM # OF TYPE ON WELL
WPUMIN:	.BLKB 1
WTAMIN:	.BLKB 1
WSPMIN:	.BLKB 1
WFUMIN:	.BLKB 1
WFLMAX:	.BLKB 1			;MAX # OF TYPE ON WELL
WPUMAX:	.BLKB 1
WTAMAX:	.BLKB 1
WSPMAX:	.BLKB 1
WFUMAX:	.BLKB 1
SPARE3:	.BLKB 2
CHACOU:	.BLKB 1		;# OF CHARGES
WTFMAX:	.BLKB 1		;TANKER + FLIPPER MAX
	.BLKB 2			;SPACER
				;SPECIAL EXPLOSION (PLAYER DEATH)
SPLINE:	.BLKB 1			;LINEAR SCALE VALUABLE
SPBINA:	.BLKB 1			;BINARY SCALE VARIABLE
SPXIND:	.BLKB 1			;INDEX
SPFTIM:	.BLKB 1			;TIMER
OPFLIP:	.BLKB 1			;OPENINGS FOR EACH TYPE
OPPULS:	.BLKB 1
OPTANK:	.BLKB 1
OPSPIN:	.BLKB 1
OPFUSE:	.BLKB 1
FLIPCO:	.BLKB 1
PULSCO:	.BLKB 1			;COUNT OF EACH TYPE
TANKCO:	.BLKB 1
SPINCO:	.BLKB 1
FUSECO:	.BLKB 1
PULTIM:	.BLKB 1			;PULSE TIMER INCREMENT
PULSON:	.BLKB 1			;PULSE STATUS (MINUS=OFF)
WTACAR:	.BLKB 4		;TANK CONTENTS (4 POSSIBILITIES)
NEARY:	.BLKB 1			;VORTEX LOGO
FARY:	.BLKB 1
NEOFLI:	.BLKB 1			;NYMPHS OFF LIMIT ZONE FLAGS
OLOFLI:	.BLKB 1
ENSIZE:	.BLKB 5		;COLLISION RANGE FOR EACH INVADER TYPE
BLIFIN:	.BLKB 1		;BONUS LIFE INTERVAL
PULPOT:	.BLKB 1			;HEIGHT AT WHICH PULEARS BECOME POTENT
				;CHARGE IF RANDOM #>WCHARFR)
LVSGAM:	.BLKB 1			;LIVES/GAME
WFUSCH:	.BLKB 1		;FUSE CHASE PLAYER FLAG (D7 FOR TOP;D6 FOR TUBE)
NWTELI:	.BLKB 1			;NEW WAVE ENEMY LINE HEIGHT
NWNYMC:	.BLKB 1			;NEW WAVE NYMPH COUNT
WPULCAM:.BLKB 1			;PULSAR CAM FOR WAVE
WFLICAM:.BLKB 1			;FLIPPER CAM FOR USAVE
TYPCOD:	.BLKB 1
WFUFRQ:	.BLKB 1			;FUSE LANE CHANGE PCNT (OF 256.)
WINVIL:	.BLKB 5			;INVADER SPEED (FRAC) FOR EACH TYPE
WINVIN:	.BLKB 5			;INVADER SPEED (INT)
WFUSIL	=WINVIL+ZABFUS
WFUSIH	=WINVIN+ZABFUS
OPTIN3:	.BLKB 1			;OPTION SWITCH 3 (BANK OF 4)
PSCALE:	.BLKB 1			;PAUSE SEALER
QT2:	.BLKB 1			;SECURITY
WPULFI:	.BLKB 1			;PULSAR FIRE FLAG
SECUVY:	.BLKB 1			;SECURITY COUNTER
;
;1C6->1CF:EAROM
;
	.PAGE
	.SBTTL	CONSTANTS-COUNTS

NPLANE=	8
NINVAD=	7
NLINES=	16.
NNYMPH=	64.
NPCHARG=8
NICHARG=4
NCHARG=NPCHARG+NICHARG
NEXPLO=8

	.SBTTL	CONSTANTS-PLAYFIELD

ILINDDY=0F0
ILINLIY=010

	.SBTTL	VARIABLES-OBJECT COUNTERS
	.ASECT
	.=200
	.PAGE
	.SBTTL	VARIABLES-OBJECT LOCATION + STATUS
;
;CURSOR
;
CURSL1:	.BLKB 1			;ONE END LINE #
CURSL2:	.BLKB 1			;OTHER END LINE # (CCW TO CURSL1)
				; 80 MEANS PLAYER IS DEAD
CURSY:	.BLKB 1		;CURSOR DEPTH
;
;NYMPHS
;
NYMPL:	.BLKB NNYMPH
NYMPY:	.BLKB NNYMPH
;
;INVADERS
;
				;
INVAC1:	.BLKB NINVAD		;INVADER STATUS BYTE 1
INVABI	=7
ZABFLI	=0			;APPEARANCE:0=FLIPPER
ZABPUL	=1			;	    1=PULSAR
ZABTAN	=2			;	    2=TANKER
ZABTRA	=3			;	    3=TRALER
ZABFUS	=4			;	    4=FUSE
				;	    5-7=UNUSED
INVSEQ	=18
INVMOT	=80
ZMOTMO	=0		;MOTION:0=NOT FLIPPING/LEAPING
ZMOTJM=INVMOT			;	1=FLIPPER/LEAPING
INVROT	=40
ZROTCW	=0			;ROTATIONAL DIRECTION:0=CW
ZROCCW	=INVROT			;
				;
INVAC2:	.BLKB NINVAD		;INVADER STATUS BYTE 2
INVCAR	=3
ZCARNO	=0			;CARRIER (0=NOTHING)
ZCARFL	=1			;	  1=FLIPPERS
ZCARPU	=2			;	  2=PULSARS
ZCARFU	=3			;	  3=FUSES

INVFIR	=40			;FIREPOWER (0=NO FIRE, 1=FIRE)
ZFIRNO	=0
ZFIRYE	=INVFIR
INVDIR	=80			;DIRECTION (0=UP, 1=DOWN)
ZDIRUP	=0
ZDIRDO	=INVDIR
INVCAM:	.BLKB NINVAD
INVLOO:	.BLKB NINVAD
INVAYL:	.BLKB NINVAD		;Y POSITION (FRACTIONAL)
INVACT:	.BLKB NINVAD		;TIME SINCE LAST CHARGE LAUNCH
;FOR LEAPERS:	INVAL1,2=CURRENT X & Z POSITION OF LEAPER CENTER
;		INVACT=D3-D0=DEST. LINE #
;		D4=1 MEANS GO TO CENTER FIRST
;
;CHARGES
;
CHARL1:	.BLKB NCHARG		;ONE END LINE #
INVAL1:	.BLKB NINVAD		;LINE # FOR 1 LEG (INVADERS)
CHARL2:	.BLKB NCHARG		;OTHER END LINE # (CCW TO CHARL1)
INVAL2:	.BLKB NINVAD		;LINE # FOR CCW LEG (JUMPS SEG.IF-)
CHARY:	.BLKB NCHARG		;Y POSITION (0=INACTIVE)
INVAY:	.BLKB NINVAD		;Y POSITION FOR LEGS (INVADERS)
CHARYL:	.BLKB NCHARG		;Y POSITION FRACTION
CHARCO:	.BLKB NPCHARG		;CHARGE COLLISION COUNTER
PCVELO	=9			;PLAYER SHOT VELOCITY (I)
PULVEL	=0FEA0			;PULSAR VELOCITY (IF)
;
;EXPLOSIONS
;
EXPLOL:	.BLKB NEXPLO		;EXPLOSION LINE # (CW LEG)
EXPLOT:	.BLKB NEXPLO		;EXPLOSION TYPE
EXPLOY:	.BLKB NEXPLO		;EXPLOSION DEPTH (WORLD Y)
EXPLOS:	.BLKB NEXPLO		;EXPLOSION SEQUENCES
;
;LINES (SCREEN COORDINATES)
;
LINSXH:	.BLKB NLINES		;NEAR PT.
LINSXL:	.BLKB NLINES
LINSZH:	.BLKB NLINES
LINSZL:	.BLKB NLINES
LIFSXH:	.BLKB NLINES		;FAR PT.
LIFSXL:	.BLKB NLINES
LIFSZH:	.BLKB NLINES
LIFSZL:	.BLKB NLINES
LINSTA:	.BLKB NLINES		;ENEMY LINE STATUS (D7=1:NEW NEAR PT.;D6=1=SHATTERED)
;
;DATA SAVED FROM PLAYER TO PLAYER
;
ACTIP:				;ACTIVE PLAYER DATA
SUZCNT:	.BLKB 1		;SUPERZAPPER USE COUNTER
NYMCOU:	.BLKB 1			;# OF NYMPHS
LINEY:	.BLKB NLINES		;ENEMY LINE HEIGHTS
SAVEP:				;STANDBY PLAYER DATA
	.BLKB SAVEP-ACTIP
SAVEND:				;DUMMY
LINEX:	.BLKB NLINES
LINEZ:	.BLKB NLINES
LINANG:	.BLKB NLINES		;INDEX=ANGLE FROM GRID LINE TO NEXT CCW LINE
PLANEY:	.BLKB NPLANE	;STAR FIELD PLANES
BOOKKS:			;BOOKKEEPING
SECOUL:	.BLKB 1			;GAME UP TIMER
SECOUM:	.BLKB 1
SECOUH:	.BLKB 1
SECOPL:	.BLKB 1			;GAME PLAY TIMER
SECOPM:	.BLKB 1
SECOPH:	.BLKB 1
NGAMIL:	.BLKB 1			;# OF GAMES
NGAMIH:	.BLKB 1
NGAME0:	.BLKB 1
NGAM2L:	.BLKB 1			;# OF 2 PLAYER GAMES
NGAM2H:	.BLKB 1
NGAM20:	.BLKB 1
BOOKKE:
NGAVGL:	.BLKB 1			;ORIG GAME TIME
NGAVGH:	.BLKB 1
NGAVGZ:	.BLKB 1
BUFACT:	.BLKB 10		;ACTIVE/AVAILABLE BUFFER
SPOKST:	.BLKB NLINES		;SPOKE STATUS (PULEARS)
LINEXM:	.BLKB NLINES		;HALF WAY BETWEEN LINES COORDINATES
LINEZM:	.BLKB NLINES
QT3:	.BLKB 1			;SECURITY
	.=NYMPL			;***WARNING:OVERLAY***
				;PARTICLES
				;
PARLIX:	.BLKB NPARTI*2		;FRACTIONAL POSITION
PARLIY:	.BLKB NPARTI*2
PARLIZ:	.BLKB NPARTI*2
PARTIX:	.BLKB NPARTI*2		;INTEGER POSITION (80=CENTER)
PARTIY:	.BLKB NPARTI*2
PARTIZ:	.BLKB NPARTI*2
PARLXV:	.BLKB NPARTI*2		;FRACTIONAL VELOCITY
PARLYV:	.BLKB NPARTI*2
PARLZV:	.BLKB NPARTI*2
PARTXV:	.BLKB NPARTI*2		;INTEGER VELOCITY (SIGNED)
PARTYV:	.BLKB NPARTI*2
PARTZV:	.BLKB NPARTI*2
	.SBTTL	VARIABLES - PAGE 1
	.ASECT
	.=600
RANKS:	.BLKB 2			;RANK FOR ACH PLAYER(0=NO RANK)
TBLIND:	.BLKB 1			;INDEX INTO INITIAL OF NEW INITIAL
FLGNHI:	.BLKB 1			;FLAG FOR HIS SCORE FOUND
ININDX:	.BLKB 1			;NEW INITIALS LEFT-1 COUNTER
TIMHIS:	.BLKB 1			;TIMER UNTIL INITIAL ENTRY IS ABORTED
INITAL:	.BLKB 3*<NHISCO>
HRANKL:	.BLKB <3*58.>+<2*41.>
HRANKM	=HRANKL+1
HRANKH	=HRANKM+1
HSCORL	=HRANKL+<2*41.>+<3*50.>
HSCORM	=HSCORL+1
HSCORH	=HSCORM+1

GAMOP1:	.BLKB 1			;GAME PLAY OPTIONS (SWITCH 1)
GAMOP3:	.BLKB 1			;(SWITCH 3)
QT4:	.BLKB 1			;SECURITY
	.IF NE,SPACG
;SFORTS:.BLKB NFORTS*4*2	;SAVE AREA FOR EACH PLAYER'S FORTSTATUS
	.ASECT
	.=2A0
BUFR8:	.BLKB 8			;BUFFER
INDEX0:	.BLKB 1
SDOT:	.BLKB 8*8		;DOT STATUS
XDOT:	.BLKB 8			;X PLANE LOCS
YDOT:	.BLKB 8			;Y PLANE LOCS
ZDOT:	.BLKB 8			;Z PLANE LOCS
RIGHT:	.BLKB 1
LEFT:	.BLKB 1
HIGH:	.BLKB 1
LOW:	.BLKB 1
XHIVIS:	.BLKB 1			;HIGHEST VISIBLE PX FOR GIVEN P4
XLOVIS:	.BLKB 1			;LOWEST VISIBLE PX FOR GIVEN P4
ZHIVIS:	.BLKB 1			;HIGHEST VISIBLE PZ FOR GIVEN P4
ZLOVIS:	.BLKB 1			;LOWEST VISIBLE PZ FOR GIVEN P4
RITDLT	=PNTTBL			;SX,SZ VECTOR FOR MOVING RIGHT
LEFDLT	=PNTTBL+4		;SX,SZ VECTOR FOR MOVING LEFT
UPDLT	=PNTTBL+8		;SX,SZ VECTOR FOR MOVING UP
	.ASECT
	.=2A0
ASXINL:	.BLKB NASTER
ASXIN:	.BLKB NASTER
ASYINL:	.BLKB NASTER
ASYIN:	.BLKB NASTER
ASZINL:	.BLKB NASTER
ASZIN:	.BLKB NASTER
ASTYPE:	.BLKB 1
DSTYPE:	.BLKB NDEFSH		;DEF SPEAR TYPE
				;FF=NO TARGET
				;D7=0: D6-D0=INDEX #
				;D7=1: D2-D0=ROW #
				;      D5-D3=COLUMN #
				;      D6=0
ASXL:	.BLKB NASTER
ASYL:	.BLKB NASTER
ASZL:	.BLKB NASTER
	.ASECT
	.=320
FZCOLS:	.BLKB NECOLS	
FXCOLS:	.BLKB NECOLS		;FRACTIONAL POSITION
FYROWS:	.BLKB NEROWS
FZROWS:	.BLKB NEROWS
ROTCNT:	.BLKB 1
XRCNTR:	.BLKB 1			;ROTATION CENTER
YRCNTR:	.BLKB 1
ZRCNTR:	.BLKB 1
PLAYST:
ZDEECC:	.BLKB 1
XDEECC:	.BLKB 1
ZCOLS:	.BLKB NECOLS
ZROWS:	.BLKB NEROWS
XCOLS:	.BLKB NECOLS
YROWS:	.BLKB NEROWS
ROWL:	.BLKB NEROWS
COLINC:	.BLKB 1
ROWINC:	.BLKB 1
NUMENE:	.BLKB 1
PLAYEND:
SAVEST:	.BLKB PLAYEND-PLAYST	;SAVE AREA FOR PLAYER WAITING
	.ENDC
	.PAGE
	.IF NE,SPACG
	.SBTTL MACROS: ARITHMETIC

	.MACRO APBCDD AA,BB,CC	;A+B TO C (DOUBLE PREC)

	LDA AA
	CLC
	ADC BB
	STA CC
	LDA AA+1
	ADC BB+1
	STA CC+1

	.ENDM

	.MACRO AMBCDD AA,BB,CC	;A-B TO C (DOUBLE PREC)

	LDA AA
	SEC
	SBC BB
	STA CC
	LDA AA+1
	SBC BB+1
	STA CC+1

	.ENDM
	.MACRO APBCSD AA,BB,CC	;A+B->C (S+S->D)
	LDA AA
	CLC
	ADC BB
	STA CC
	LDA I,0
	ADC I,0
	STA CC+1

	.ENDM

	.MACRO APBCSS AA,BB,CC 	;A+B -> C (SINGLE PREC)
	LDA AA
	CLC
	ADC BB
	STA CC

	.ENDM

	.MACRO AMBCSS AA,BB,CC	;A-B -> C (SINGLE PREC)

	LDA AA
	SEC
	SBC BB
	STA CC

	.ENDM

;
;A+B -> A A=MAX IF A+B > MAX
;CC IF AT LIMIT

	.MACRO APBMAX AA,BB,MAX
	LDA AA
	CLC
	ADC I,BB
	CMP I,MAX
	IFCS
	LDA I,MAX
	CLC
	ELSE
	SEC
	ENDIF
	STA AA
	.ENDM

;A-B -> A A=MIN IF A-B < MIN
;CC IF AT LIMIT

	.MACRO AMBMIN AA,BB,MIN
	LDA AA
	SEC
	SBC I,BB
	CMP I,MIN
	IFCC
	LDA I,MIN
	ENDIF
	STA AA
	.ENDM
	.ENDC
	.PAGE
                                                                                                                                                                                                                                                                                                                            